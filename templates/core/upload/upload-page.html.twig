{% if ajax_render == false %}
    {% set template= "base.html.twig" %}
{% else %}
    {% set template= "blank.html.twig" %}
{% endif %}
    {% extends template %}
{% block body %}

    <!-- ### $App Screen Content ### -->
    <main class='main-content bgc-grey-100'>
        <div id='mainContent'>
            <div class="container-fluid">
                {# Forms #}
                <div class="row">
                    <div class="col-md-12">
                        <div class="bgc-white bd bdrs-3 p-20 mB-20 d-flex flex-column">
                            <h4 class="c-grey-900 mB-20 align-self-center">Upload files</h4>


                            <div class="col-md-6 add-record-form file-upload-form justify-content-center align-self-center">
                                {{ form_start(form, {'attr': {'class': 'flex-column'}}) }}

                                {{ form_widget(form.upload_type, {'attr': {'class': 'form-control upload-type listFilterer'}}) }}

                                <section class="file-picker-and-folder-picker d-flex">
                                    <section id="file-upload-file-select"
                                             class=" btn btn-sm btn-primary d-flex"
                                             style="width:50px; height:50px; padding: 0; "
                                    >
                                        {{ form_widget(form.file) }}

                                    </section>
                                    {{ form_widget(form.resetSelectedFiles) }}
                                    {{ form_widget(form.subdirectory) }}
                                </section>

                                <section class="button-submit col-md-3">
                                    {{ form_widget(form.submit) }}
                                </section>

                                {{ form_end(form) }}
                                <small id="currentFileSizeWrapper">
                                    Selected files size: <span class="selected-files-size">0</span>Mb
                                </small>
                                <br/>
                                <small id="maxUploadSizeWrapper" data-max-upload-size="{{ max_upload_size_mb }}">
                                    Max upload size: {{ max_upload_size_mb }} Mb
                                </small>
                                <small>
                                    <ul  id="selectedFilesList">

                                    </ul>
                                </small>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>


    {# TODO: add script for upload form and move js + turn into jq #}
    {#  Handling displaying information about selected files  #}
    <script>
        let fileSelectButton            = document.getElementById('file-upload-file-select');
        let filesInput                  = document.getElementById('upload_form_file');
        var currentSizeContainer        = document.querySelector('.selected-files-size');
        let currentFileSizeWrapper      = document.querySelector("#currentFileSizeWrapper");
        let maxUploadSizeWrapper        = document.querySelector("#maxUploadSizeWrapper");
        let maxUploadSize               = maxUploadSizeWrapper.getAttribute('data-max-upload-size');
        let submitButton                = document.querySelector('#upload_form_submit');

        let filesNames          = [];
        let filesTotalSizeBytes = 0;
        let filesTotalSizeMb    = 0;
        let bytesInMb           = 1048576;

        fileSelectButton.onchange = function () {
            let selectedFiles       = filesInput.files;
            var selectedFilesList   = document.querySelector('#selectedFilesList');

            for (let x = 0; x <= selectedFiles.length - 1 ; x++){
                filesNames.push(selectedFiles[x].name);
                filesTotalSizeBytes += selectedFiles[x].size;

                let filesListWrapper    = document.createElement("LI");
                let textnode            = document.createTextNode(selectedFiles[x].name);

                filesListWrapper.appendChild(textnode);
                selectedFilesList.appendChild(filesListWrapper);

            }

            filesTotalSizeMb = Math.floor(filesTotalSizeBytes/bytesInMb);

            currentSizeContainer.innerHTML  = filesTotalSizeMb;

            if( filesTotalSizeMb < maxUploadSize ){
                currentFileSizeWrapper.className = "text-success";
            }else{
                currentFileSizeWrapper.className = "text-danger";
                submitButton.className           += ' disabled';
            }

            console.log(filesNames);
            console.log(filesTotalSizeMb);

        };
    </script>

    {#  Handling reseting files selection #}
    <script>
        let clearSelectionButton = document.querySelector('.clear-selection');

        clearSelectionButton.onclick = function(){
            filesInput.value                = "";
            selectedFilesList.innerHTML     = "";
            currentSizeContainer.innerHTML  = 0;
            filesTotalSizeBytes             = 0;
            submitButton.className          = "upload-submit btn btn-sm btn-primary btn" // Change to removeClass('disabled");
        }

    </script>
{% endblock body %}
